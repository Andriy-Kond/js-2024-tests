// ! Усі стрілки створюються як функціональний вираз, і якщо функція - не анонімна, її необхідно присвоювати змінній.

// Звичайне оголошення функції
function classicAdd(a, b, c) {
  console.log(a, b, c);
  return a + b + c;
}

// Те саме стрілочною функцією з явним поверненням (коли треба зробити ще щось окрім повернення)
const arrowAdd = (a, b, c) => {
  console.log(a, b, c);
  return a + b + c;
};
// Якщо параметр один, його можна оголошувати без круглих дужок. Приклад з явним поверненням.
const add = (a) => {
  console.log(a);
  return a + 5;
};
// Якщо параметри відсутні, то обов'язково повинні бути порожні круглі дужки.
const greet = () => {
  console.log("Привіт!");
};
// Неявне повернення: якщо фігурні дужки відсутні, то повертається результат виразу, який стоїть після =>.
// Використовується, коли окрім повернення у функції не треба нічого робити
const implicitReturn = (a, b, c) => a + b + c;

// ^ Псевдомасив arguments
// ! У стрілочних функцій немає локальної змінної arguments, що містить усі аргументи. Якщо необхідно зібрати всі аргументи в масив, використовується операція rest.
const addArgsFn = (...args) => {
  console.log(args);
};

add(1, 2, 3); // [1, 2, 3]
